{"version":3,"sources":["mainContext.js","socketContext.js","usersContext.js","components/Login/Login.js","components/Chat/Chat.js","components/Admin/Admin.js","components/DefaultPage.js","App.js","index.js"],"names":["MainContext","React","createContext","MainProvider","children","useState","name","setName","room","setRoom","Provider","value","SocketContext","SocketProvider","socket","io","transports","UsersContext","UsersProvider","users","setUsers","Login","useContext","history","useHistory","toast","useToast","useEffect","on","className","flexDirection","mb","as","size","textAlign","fontFamily","fontWeight","letterSpacing","gap","base","md","variant","mr","type","placeholder","onChange","e","target","colorScheme","isRound","icon","onClick","emit","error","console","log","position","title","description","status","duration","isClosable","push","Chat","message","setMessage","messages","setMessages","window","onpopstate","logout","msg","notif","handleSendMessage","preventDefault","go","width","sm","height","bg","p","borderRadius","alignItems","justifyContent","IconButton","color","map","user","minH","fontSize","id","flex","slice","toUpperCase","opacity","h","w","debug","length","i","m","ml","text","mt","onSubmit","disabled","Admin","current_rooms","setCurrentRooms","axios","get","then","res","data","DefaultPage","App","align","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b66dcb6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst MainContext = React.createContext()\r\n\r\nconst MainProvider = ({ children }) => {\r\n    const [name, setName] = useState('')\r\n    const [room, setRoom] = useState('')\r\n\r\n    return (\r\n        <MainContext.Provider value={{ name, room, setName, setRoom }}>\r\n            {children}\r\n        </MainContext.Provider>\r\n    )\r\n}\r\n\r\nexport { MainContext, MainProvider } ","import React from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nconst SocketProvider = ({ children }) => {\r\n    const ENDPOINT = 'https://still-tundra-73032.herokuapp.com/';\r\n    // const ENDPOINT = 'http://localhost:5000/';\r\n    const socket = io(ENDPOINT, { transports: ['websocket', 'polling'] })\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport { SocketContext, SocketProvider }","import React, { useState } from 'react'\r\n\r\nconst UsersContext = React.createContext()\r\n\r\nconst UsersProvider = ({ children }) => {\r\n    const [users, setUsers] = useState([])\r\n\r\n    return (\r\n        <UsersContext.Provider value={{ users, setUsers }}>\r\n            {children}\r\n        </UsersContext.Provider>\r\n    )\r\n}\r\n\r\nexport { UsersContext, UsersProvider } ","import React, { useContext, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { MainContext } from '../../mainContext'\r\nimport { SocketContext } from '../../socketContext'\r\nimport { Flex, Heading, IconButton, Input } from \"@chakra-ui/react\"\r\nimport { RiArrowRightLine } from \"react-icons/ri\"\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport { UsersContext } from '../../usersContext'\r\n\r\nconst Login = () => {\r\n    const socket = useContext(SocketContext)\r\n    const { name, setName, room, setRoom } = useContext(MainContext)\r\n    const history = useHistory()\r\n    const toast = useToast()\r\n    const { setUsers } = useContext(UsersContext)\r\n\r\n    //Checks to see if there's a user already present\r\n\r\n    useEffect(() => {\r\n        socket.on(\"users\", users => {\r\n            setUsers(users)\r\n        })\r\n    })\r\n\r\n    //Emits the login event and if successful redirects to chat and saves user data\r\n    const handleClick = () => {\r\n        socket.emit('login', { name, room }, error => {\r\n            if (error) {\r\n                console.log(error)\r\n                return toast({\r\n                    position: \"top\",\r\n                    title: \"Error\",\r\n                    description: error,\r\n                    status: \"error\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                })\r\n            }\r\n            history.push('/chat')\r\n            return toast({\r\n                position: \"top\",\r\n                title: \"Hey there\",\r\n                description: `Welcome to ${room}`,\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Flex className='login' flexDirection='column' mb='8'>\r\n            <Heading as=\"h1\" size=\"4xl\" textAlign='center' mb='8' fontFamily='DM Sans' fontWeight='600' letterSpacing='-2px'>CREATE/JOIN ROOM's</Heading>\r\n            <Flex className=\"form\" gap='1rem' flexDirection={{ base: \"column\", md: \"row\" }}>\r\n                <Input variant='filled' mr={{ base: \"0\", md: \"4\" }} mb={{ base: \"4\", md: \"0\" }} type=\"text\" placeholder='User Name' value={name} onChange={e => setName(e.target.value)} />\r\n                <Input variant='filled' mr={{ base: \"0\", md: \"4\" }} mb={{ base: \"4\", md: \"0\" }} type=\"text\" placeholder='Room Name' value={room} onChange={e => setRoom(e.target.value)} />\r\n                <IconButton colorScheme='cyan' isRound='true' icon={<RiArrowRightLine />} onClick={handleClick}></IconButton>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { MainContext } from '../../mainContext'\r\nimport { SocketContext } from '../../socketContext'\r\nimport { Box, Flex, Heading, IconButton, Text, Menu, Button, MenuButton, MenuList, MenuItem } from \"@chakra-ui/react\"\r\nimport { FiList } from 'react-icons/fi'\r\nimport { BiMessageDetail } from 'react-icons/bi'\r\nimport { RiSendPlaneFill } from 'react-icons/ri'\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport { useToast } from \"@chakra-ui/react\"\r\nimport './Chat.css'\r\nimport { UsersContext } from '../../usersContext'\r\n\r\nconst Chat = () => {\r\n    const { name, room, setName, setRoom } = useContext(MainContext)\r\n    const socket = useContext(SocketContext)\r\n    const [message, setMessage] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n    const { users } = useContext(UsersContext)\r\n    const history = useHistory()\r\n    const toast = useToast()\r\n\r\n    window.onpopstate = e => logout()\r\n    //Checks to see if there's a user present\r\n    useEffect(() => { if (!name) return history.push('/') }, [history, name])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on(\"message\", msg => {\r\n            setMessages(messages => [...messages, msg]);\r\n        })\r\n\r\n        socket.on(\"notification\", notif => {\r\n            toast({\r\n                position: \"top\",\r\n                title: notif?.title,\r\n                description: notif?.description,\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n            })\r\n        })\r\n    }, [socket, toast])\r\n\r\n\r\n    const handleSendMessage = (e) => {\r\n        e.preventDefault();\r\n        socket.emit('sendMessage', message, () => setMessage(''))\r\n        setMessage('')\r\n    }\r\n\r\n    const logout = () => {\r\n        setName(''); setRoom('');\r\n        history.push('/')\r\n        history.go(0)\r\n    }\r\n\r\n    return (\r\n        <Flex className='room' flexDirection='column' width={{ base: \"100%\", sm: '575px' }} height={{ base: \"100%\", sm: \"auto\" }}>\r\n            <Heading className='heading' as='h4' bg='white' p='1rem 1.5rem' borderRadius='10px 10px 0 0'>\r\n                <Flex alignItems='center' justifyContent='space-between'>\r\n                    <Menu >\r\n                        <MenuButton as={IconButton} icon={<FiList />} isRound='true' bg='blue.300' color='white' />\r\n                        <MenuList>\r\n                            {\r\n                                users && users.map(user => {\r\n                                    return (\r\n                                        <MenuItem minH='40px' key={user.id}>\r\n                                            <Text fontSize='sm'>{user.name}</Text>\r\n                                        </MenuItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </MenuList>\r\n                    </Menu>\r\n                    <Flex alignItems='center' flexDirection='column' flex={{ base: \"1\", sm: \"auto\" }}>\r\n                        <Heading fontSize='lg'> {room.slice(0, 1).toUpperCase() + room.slice(1)}</Heading>\r\n                        <Flex alignItems='center'><Text mr='1' fontWeight='400' fontSize='md' opacity='.7' letterSpacing='0' >{name}</Text><Box h={2} w={2} borderRadius='100px' bg='green.300'></Box></Flex>\r\n                    </Flex>\r\n                    <Button color='gray.500' fontSize='sm' onClick={logout}  >Logout</Button>\r\n                </Flex>\r\n            </Heading>\r\n\r\n\r\n            <ScrollToBottom className='messages' debug={false}>\r\n                {messages.length > 0 ?\r\n                    messages.map((msg, i) =>\r\n                    (<Box key={i} className={`message ${msg.user === name ? \"my-message\" : \"\"}`} m=\".2rem 0\">\r\n                        <Text fontSize='xs' opacity='.7' ml='5px' className='user'>{msg.user}</Text>\r\n                        <Text fontSize='sm' className='msg' p=\".4rem .8rem\" bg='white' borderRadius='15px' color='white'>{msg.text}</Text>\r\n                    </Box>)\r\n                    )\r\n                    :\r\n                    <Flex alignItems='center' justifyContent='center' mt='.5rem' bg='#EAEAEA' opacity='.2' w='100%'>\r\n                        <Box mr='2'>-----</Box>\r\n                        <BiMessageDetail fontSize='1rem' />\r\n                        <Text ml='1' fontWeight='400'>No messages</Text>\r\n                        <Box ml='2'>-----</Box>\r\n                    </Flex>\r\n                }\r\n            </ScrollToBottom>\r\n            <div className='form'>\r\n                <form onSubmit={handleSendMessage}>\r\n                    <input type=\"text\" placeholder='Enter Message' value={message} onChange={e => setMessage(e.target.value)} />\r\n                    <IconButton colorScheme='green' isRound='true' icon={<RiSendPlaneFill />} onClick={handleSendMessage} disabled={message === '' ? true : false}>Send</IconButton>\r\n                </form>\r\n            </div>\r\n        </Flex>\r\n\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React,{useEffect,useState} from 'react'\r\nimport './Admin.css'\r\nimport axios from 'axios';\r\nfunction Admin() {\r\n    const[current_rooms,setCurrentRooms] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/allrooms')\r\n        .then((res)=>{\r\n            setCurrentRooms(res.data);\r\n            console.log(current_rooms);\r\n        })\r\n    },[])\r\n    return (\r\n        <div className=\"admin\">\r\n            <div className=\"admin__sec1\">\r\n                <h2>All Current Users's</h2>\r\n            </div> \r\n            <div className=\"admin__sec2\">\r\n                {current_rooms.map((room,id)=>(\r\n                <div key={id} className=\"admin__block\">\r\n                    <h3>Room name : <span>{room.room}</span></h3>\r\n                    <p>User Name : <span>{room.name}</span></p>\r\n                </div>\r\n                ))}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import { IconButton } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { BiArrowBack } from 'react-icons/bi'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nexport default function DefaultPage() {\r\n    const history = useHistory()\r\n    const redirect = () => history.push('/')\r\n    return (\r\n        <div>\r\n            <IconButton mr={2} isRound='true' bg='green.300' color='white' icon={<BiArrowBack />} onClick={redirect} /> You're lost. Go home.\r\n        </div>\r\n    )\r\n}\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Login from './components/Login/Login'\r\nimport Chat from './components/Chat/Chat'\r\nimport Admin from './components/Admin/Admin'\r\nimport { SocketProvider } from './socketContext'\r\nimport { MainProvider } from './mainContext'\r\nimport './App.css'\r\nimport { ChakraProvider, Flex } from \"@chakra-ui/react\"\r\nimport { UsersProvider } from './usersContext'\r\nimport DefaultPage from './components/DefaultPage'\r\n\r\nfunction App() {\r\n  return (\r\n    <ChakraProvider>\r\n      <MainProvider>\r\n        <UsersProvider>\r\n          <SocketProvider>\r\n            <Flex className=\"App\" align='center' justifyContent='center'>\r\n              <Router>\r\n                <Switch>\r\n                  <Route exact  path='/' component={Login} />\r\n                  <Route  path='/chat' component={Chat} />\r\n                  <Route  path='/admin' component={Admin} />\r\n                  <Route component={DefaultPage} />\r\n                </Switch>\r\n              </Router>\r\n            </Flex>\r\n          </SocketProvider>\r\n        </UsersProvider>\r\n      </MainProvider>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}